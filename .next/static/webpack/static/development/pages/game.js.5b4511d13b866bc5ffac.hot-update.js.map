{"version":3,"file":"static/webpack/static/development/pages/game.js.5b4511d13b866bc5ffac.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/freeze.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/core-js/library/fn/object/define-properties.js","webpack:///./node_modules/core-js/library/fn/object/freeze.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-properties.js","webpack:///./node_modules/core-js/library/modules/es6.object.freeze.js","webpack:///./src/features/yourHand/YourHand.jsx","webpack:///./src/pages/game/index.js"],"sourcesContent":["module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/freeze\");","import _Object$defineProperties from \"../../core-js/object/define-properties\";\nimport _Object$freeze from \"../../core-js/object/freeze\";\nexport default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return _Object$freeze(_Object$defineProperties(strings, {\n    raw: {\n      value: _Object$freeze(raw)\n    }\n  }));\n}","require('../../modules/es6.object.define-properties');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperties(T, D) {\n  return $Object.defineProperties(T, D);\n};\n","require('../../modules/es6.object.freeze');\nmodule.exports = require('../../modules/_core').Object.freeze;\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n// import Card from 'components/Card/Card.component';\n// import CardDragLayer from 'systems/CardDragLayer';\n\nconst YourHand = () => {\n  // const yourCards = useSelector(s => s.yourHand);\n  const yourCards = [];\n  const { length } = yourCards;\n\n  return (\n    <Component\n      data-layout=\"YourHand\"\n      data-length={length}\n      numberOfCardsInHand={length}\n    >\n      {yourCards.map((card, index) => {\n        const {\n          artist,\n          attack,\n          cardClass,\n          collectible,\n          cost,\n          elite,\n          entourage,\n          flavor,\n          health,\n          hideStats,\n          howToEarn,\n          howToEarnGolden,\n          id,\n          images,\n          mechanics,\n          name,\n          playRequirements,\n          race,\n          rarity,\n          set,\n          sounds,\n          spellDamage,\n          targetingArrowText,\n          text,\n          type\n        } = card;\n\n        return (\n          <div></div>\n          // <CardDragLayer\n          //   key={index}\n          //   index={index}\n          //   artist={artist}\n          //   attack={attack}\n          //   cardClass={cardClass}\n          //   collectible={collectible}\n          //   cost={cost}\n          //   elite={elite}\n          //   entourage={entourage}\n          //   flavor={flavor}\n          //   health={health}\n          //   hideStats={hideStats}\n          //   howToEarn={howToEarn}\n          //   howToEarnGolden={howToEarnGolden}\n          //   id={id}\n          //   images={images}\n          //   mechanics={mechanics}\n          //   name={name}\n          //   playRequirements={playRequirements}\n          //   race={race}\n          //   rarity={rarity}\n          //   set={set}\n          //   sounds={sounds}\n          //   spellDamage={spellDamage}\n          //   targetingArrowText={targetingArrowText}\n          //   text={text}\n          //   type={type}\n          // >\n          //   <Card\n          //     artist={artist}\n          //     attack={attack}\n          //     cardClass={cardClass}\n          //     collectible={collectible}\n          //     cost={cost}\n          //     elite={elite}\n          //     entourage={entourage}\n          //     flavor={flavor}\n          //     health={health}\n          //     hideStats={hideStats}\n          //     howToEarn={howToEarn}\n          //     howToEarnGolden={howToEarnGolden}\n          //     id={id}\n          //     images={images}\n          //     mechanics={mechanics}\n          //     name={name}\n          //     playRequirements={playRequirements}\n          //     race={race}\n          //     rarity={rarity}\n          //     set={set}\n          //     sounds={sounds}\n          //     spellDamage={spellDamage}\n          //     targetingArrowText={targetingArrowText}\n          //     text={text}\n          //     type={type}\n          //   />\n          // </CardDragLayer>\n        );\n      })}\n    </Component>\n  );\n};\n\nconst Component = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: center;\n\n  & > div {\n    position: relative;\n    top: -20px;\n  }\n\n  & > div + div {\n    margin-left: calc(calc(var(--card-height) / 1.4) / -3.5);\n  }\n`;\n\nexport default YourHand;\n","import Game from 'components/game/Game';\nimport Board from 'features/layout/Board';\nimport GameFooter from 'features/layout/Footer';\nimport TheirBoard from 'features/layout/TheirBoard';\nimport YourBoard from 'features/yourBoard/YourBoard';\nimport YourHand from 'features/yourHand/YourHand';\n\nexport default () => {\n  return (\n    <Game>\n      <Board>\n        <TheirBoard />\n        <YourBoard />\n      </Board>\n      <YourHand />\n    </Game>\n  );\n};\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1DA;AA4DA;AAGA;AACA;AACA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}