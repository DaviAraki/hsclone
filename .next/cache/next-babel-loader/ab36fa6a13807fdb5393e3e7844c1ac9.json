{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { loadingStart, loadingFailed } from 'utils/redux.loading';\nlet initialState = {\n  error: null,\n  isLoading: false,\n  boardHeight: 0,\n  boardWidth: 0,\n  debugBarHeight: 0,\n  footerHeight: 0,\n  headerHeight: 0\n};\nconst layoutSlice = createSlice({\n  name: 'layout',\n  initialState,\n  reducers: {\n    initLayoutFailure: loadingFailed,\n    initLayoutStart: loadingStart,\n    initLayoutSuccess: state => {\n      state.isLoading = false;\n    },\n\n    getFooterHeight(state) {\n      return state.footerHeight;\n    },\n\n    setBoardHeight(state, {\n      payload\n    }) {\n      state.boardHeight = Number(payload);\n    },\n\n    setBoardWidth(state, {\n      payload\n    }) {\n      state.boardWidth = Number(payload);\n    },\n\n    setDebugBarHeight(state, {\n      payload\n    }) {\n      state.debugBarHeight = Number(payload);\n    },\n\n    setFooterHeight(state, {\n      payload\n    }) {\n      state.footerHeight = Number(payload);\n    },\n\n    setHeaderHeight(state, {\n      payload\n    }) {\n      state.headerHeight = Number(payload);\n    }\n\n  }\n});\nconst {\n  actions,\n  reducer\n} = layoutSlice;\nexport const {\n  initLayoutFailure,\n  initLayoutStart,\n  initLayoutSuccess,\n  getFooterHeight,\n  setBoardHeight,\n  setBoardWidth,\n  setDebugBarHeight,\n  setFooterHeight,\n  setHeaderHeight\n} = actions; // const fetchMapDroneImagesFromNeighborhoods = data => {\n//   return data;\n// }\n// export const initLayout = () => async dispatch => {\n//   try {\n//     dispatch(initLayoutStart());\n//     const footerHeight = await getFooterHeight();\n//     dispatch(initLayoutSuccess(footerHeight));\n//   } catch (err) {\n//     dispatch(initLayoutFailure(err));\n//     // recursive failure init\n//     setTimeout(() => {\n//       dispatch(initLayout());\n//     }, 2000);\n//   }\n// };\n\nexport default reducer;","map":{"version":3,"sources":["/Users/william.pansky/www/hsclone/src/features/layout/layout.slice.js"],"names":["createSlice","loadingStart","loadingFailed","initialState","error","isLoading","boardHeight","boardWidth","debugBarHeight","footerHeight","headerHeight","layoutSlice","name","reducers","initLayoutFailure","initLayoutStart","initLayoutSuccess","state","getFooterHeight","setBoardHeight","payload","Number","setBoardWidth","setDebugBarHeight","setFooterHeight","setHeaderHeight","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,qBAA5C;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,SAAS,EAAE,KAFM;AAGjBC,EAAAA,WAAW,EAAE,CAHI;AAIjBC,EAAAA,UAAU,EAAE,CAJK;AAKjBC,EAAAA,cAAc,EAAE,CALC;AAMjBC,EAAAA,YAAY,EAAE,CANG;AAOjBC,EAAAA,YAAY,EAAE;AAPG,CAAnB;AAUA,MAAMC,WAAW,GAAGX,WAAW,CAAC;AAC9BY,EAAAA,IAAI,EAAE,QADwB;AAE9BT,EAAAA,YAF8B;AAG9BU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,iBAAiB,EAAEZ,aADX;AAERa,IAAAA,eAAe,EAAEd,YAFT;AAGRe,IAAAA,iBAAiB,EAAEC,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACZ,SAAN,GAAkB,KAAlB;AACD,KALO;;AAMRa,IAAAA,eAAe,CAACD,KAAD,EAAQ;AACrB,aAAOA,KAAK,CAACR,YAAb;AACD,KARO;;AASRU,IAAAA,cAAc,CAACF,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,EAAqB;AACjCH,MAAAA,KAAK,CAACX,WAAN,GAAoBe,MAAM,CAACD,OAAD,CAA1B;AACD,KAXO;;AAYRE,IAAAA,aAAa,CAACL,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,EAAqB;AAChCH,MAAAA,KAAK,CAACV,UAAN,GAAmBc,MAAM,CAACD,OAAD,CAAzB;AACD,KAdO;;AAeRG,IAAAA,iBAAiB,CAACN,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,EAAqB;AACpCH,MAAAA,KAAK,CAACT,cAAN,GAAuBa,MAAM,CAACD,OAAD,CAA7B;AACD,KAjBO;;AAkBRI,IAAAA,eAAe,CAACP,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,EAAqB;AAClCH,MAAAA,KAAK,CAACR,YAAN,GAAqBY,MAAM,CAACD,OAAD,CAA3B;AACD,KApBO;;AAqBRK,IAAAA,eAAe,CAACR,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,EAAqB;AAClCH,MAAAA,KAAK,CAACP,YAAN,GAAqBW,MAAM,CAACD,OAAD,CAA3B;AACD;;AAvBO;AAHoB,CAAD,CAA/B;AA8BA,MAAM;AAAEM,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBhB,WAA7B;AAEA,OAAO,MAAM;AACXG,EAAAA,iBADW;AAEXC,EAAAA,eAFW;AAGXC,EAAAA,iBAHW;AAIXE,EAAAA,eAJW;AAKXC,EAAAA,cALW;AAMXG,EAAAA,aANW;AAOXC,EAAAA,iBAPW;AAQXC,EAAAA,eARW;AASXC,EAAAA;AATW,IAUTC,OAVG,C,CAYP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { loadingStart, loadingFailed } from 'utils/redux.loading';\n\nlet initialState = {\n  error: null,\n  isLoading: false,\n  boardHeight: 0,\n  boardWidth: 0,\n  debugBarHeight: 0,\n  footerHeight: 0,\n  headerHeight: 0\n};\n\nconst layoutSlice = createSlice({\n  name: 'layout',\n  initialState,\n  reducers: {\n    initLayoutFailure: loadingFailed,\n    initLayoutStart: loadingStart,\n    initLayoutSuccess: state => {\n      state.isLoading = false;\n    },\n    getFooterHeight(state) {\n      return state.footerHeight;\n    },\n    setBoardHeight(state, { payload }) {\n      state.boardHeight = Number(payload);\n    },\n    setBoardWidth(state, { payload }) {\n      state.boardWidth = Number(payload);\n    },\n    setDebugBarHeight(state, { payload }) {\n      state.debugBarHeight = Number(payload);\n    },\n    setFooterHeight(state, { payload }) {\n      state.footerHeight = Number(payload);\n    },\n    setHeaderHeight(state, { payload }) {\n      state.headerHeight = Number(payload);\n    }\n  }\n});\n\nconst { actions, reducer } = layoutSlice;\n\nexport const {\n  initLayoutFailure,\n  initLayoutStart,\n  initLayoutSuccess,\n  getFooterHeight,\n  setBoardHeight,\n  setBoardWidth,\n  setDebugBarHeight,\n  setFooterHeight,\n  setHeaderHeight\n} = actions;\n\n// const fetchMapDroneImagesFromNeighborhoods = data => {\n//   return data;\n// }\n\n// export const initLayout = () => async dispatch => {\n//   try {\n//     dispatch(initLayoutStart());\n//     const footerHeight = await getFooterHeight();\n//     dispatch(initLayoutSuccess(footerHeight));\n//   } catch (err) {\n//     dispatch(initLayoutFailure(err));\n\n//     // recursive failure init\n//     setTimeout(() => {\n//       dispatch(initLayout());\n//     }, 2000);\n//   }\n// };\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}