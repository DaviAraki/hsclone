{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/william.pansky/www/hsclone/src/features/layout/TheirBoard.jsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  align-items: center;\\n  background: #333;\\n  box-shadow: inset 0 0 10px transparent;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  height: \", \";\\n  justify-content: center;\\n  margin: auto auto 0;\\n  overflow: hidden;\\n  width: \", \";\\n\\n  & > div + div {\\n    margin-left: 20px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Card from 'components/Card/Card.component';\nimport Minion from 'components/Minion/Minion.component';\nimport debugCards from 'debugData/debugCards.json';\nimport useDimensions from 'react-use-dimensions';\nimport { targetHovered, resetHoveredTarget } from 'features/targeting/targeting.slice';\n\nvar CanTargetTest = function CanTargetTest(_ref) {\n  var children = _ref.children;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (s) {\n    return s.targeting;\n  }),\n      enabled = _useSelector.enabled;\n\n  var _useDimensions = useDimensions({\n    liveMeasure: true\n  }),\n      _useDimensions2 = _slicedToArray(_useDimensions, 2),\n      cardRef = _useDimensions2[0],\n      redRefProps = _useDimensions2[1];\n\n  var handleMouseEnter = React.useCallback(function (redRefProps) {\n    return dispatch(targetHovered(redRefProps));\n  }, [dispatch]);\n  var handleMouseLeave = React.useCallback(function () {\n    return dispatch(resetHoveredTarget());\n  }, [dispatch]);\n  return enabled ? __jsx(\"div\", {\n    ref: cardRef,\n    className: \"mechanics--can_target\",\n    onMouseEnter: function onMouseEnter() {\n      return handleMouseEnter(redRefProps);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return handleMouseLeave();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, children) : __jsx(\"div\", {\n    ref: cardRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, children);\n};\n\nvar TheirBoard = function TheirBoard(_ref2) {\n  var children = _ref2.children;\n\n  var _useSelector2 = useSelector(function (s) {\n    return s.layout;\n  }),\n      boardHeight = _useSelector2.boardHeight,\n      boardWidth = _useSelector2.boardWidth;\n\n  var _useDrop = useDrop({\n    accept: 'SPELL',\n    drop: function drop() {\n      return {\n        name: 'TheirBoard'\n      };\n    },\n    collect: function collect(monitor) {\n      return {\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop()\n      };\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      canDrop = _useDrop2$.canDrop,\n      isOver = _useDrop2$.isOver,\n      drop = _useDrop2[1];\n\n  return boardHeight && boardWidth ? __jsx(Component, {\n    boardHeight: boardHeight,\n    boardWidth: boardWidth,\n    \"data-file\": \"TheirBoard\",\n    ref: drop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, children, debugCards.slice(0, 2).map(function (card) {\n    var artist = card.artist,\n        attack = card.attack,\n        cardClass = card.cardClass,\n        collectible = card.collectible,\n        cost = card.cost,\n        elite = card.elite,\n        entourage = card.entourage,\n        flavor = card.flavor,\n        health = card.health,\n        hideStats = card.hideStats,\n        howToEarn = card.howToEarn,\n        howToEarnGolden = card.howToEarnGolden,\n        id = card.id,\n        images = card.images,\n        mechanics = card.mechanics,\n        name = card.name,\n        playRequirements = card.playRequirements,\n        race = card.race,\n        rarity = card.rarity,\n        set = card.set,\n        sounds = card.sounds,\n        spellDamage = card.spellDamage,\n        targetingArrowText = card.targetingArrowText,\n        text = card.text,\n        type = card.type;\n    return __jsx(CanTargetTest, {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(Minion, {\n      artist: artist,\n      attack: attack,\n      cardClass: cardClass,\n      collectible: collectible,\n      cost: cost,\n      elite: elite,\n      entourage: entourage,\n      flavor: flavor,\n      health: health,\n      hideStats: hideStats,\n      howToEarn: howToEarn,\n      howToEarnGolden: howToEarnGolden,\n      id: id,\n      images: images,\n      mechanics: mechanics,\n      name: name,\n      playRequirements: playRequirements,\n      race: race,\n      rarity: rarity,\n      set: set,\n      sounds: sounds,\n      spellDamage: spellDamage,\n      targetingArrowText: targetingArrowText,\n      text: text,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  })) : null;\n};\n\nvar Component = styled.div(_templateObject(), function (p) {\n  return p.boardHeight ? \"calc(\".concat(p.boardHeight, \"px / 2)\") : \"0px\";\n}, function (p) {\n  return p.boardWidth ? \"\".concat(p.boardWidth, \"px\") : \"0px\";\n});\nTheirBoard.propTypes = {\n  children: PropTypes.node\n};\nexport default TheirBoard;","map":{"version":3,"sources":["/Users/william.pansky/www/hsclone/src/features/layout/TheirBoard.jsx"],"names":["React","useDrop","useSelector","useDispatch","PropTypes","styled","Card","Minion","debugCards","useDimensions","targetHovered","resetHoveredTarget","CanTargetTest","children","dispatch","s","targeting","enabled","liveMeasure","cardRef","redRefProps","handleMouseEnter","useCallback","handleMouseLeave","TheirBoard","layout","boardHeight","boardWidth","accept","drop","name","collect","monitor","isOver","canDrop","slice","map","card","artist","attack","cardClass","collectible","cost","elite","entourage","flavor","health","hideStats","howToEarn","howToEarnGolden","id","images","mechanics","playRequirements","race","rarity","set","sounds","spellDamage","targetingArrowText","text","type","Component","div","p","propTypes","node"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Card from 'components/Card/Card.component';\nimport Minion from 'components/Minion/Minion.component';\nimport debugCards from 'debugData/debugCards.json';\nimport useDimensions from 'react-use-dimensions';\nimport {\n  targetHovered,\n  resetHoveredTarget\n} from 'features/targeting/targeting.slice';\n\nconst CanTargetTest = ({ children }) => {\n  const dispatch = useDispatch();\n  const { enabled } = useSelector(s => s.targeting);\n  const [cardRef, redRefProps] = useDimensions({\n    liveMeasure: true\n  });\n\n  const handleMouseEnter = React.useCallback(\n    redRefProps => {\n      return dispatch(targetHovered(redRefProps));\n    },\n    [dispatch]\n  );\n\n  const handleMouseLeave = React.useCallback(() => {\n    return dispatch(resetHoveredTarget());\n  }, [dispatch]);\n\n  return enabled ? (\n    <div\n      ref={cardRef}\n      className=\"mechanics--can_target\"\n      onMouseEnter={() => handleMouseEnter(redRefProps)}\n      onMouseLeave={() => handleMouseLeave()}\n    >\n      {children}\n    </div>\n  ) : (\n    <div ref={cardRef}>{children}</div>\n  );\n};\n\nconst TheirBoard = ({ children }) => {\n  const { boardHeight, boardWidth } = useSelector(s => s.layout);\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: 'SPELL',\n    drop: () => ({ name: 'TheirBoard' }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n\n  return boardHeight && boardWidth ? (\n    <Component\n      boardHeight={boardHeight}\n      boardWidth={boardWidth}\n      data-file=\"TheirBoard\"\n      ref={drop}\n    >\n      {children}\n\n      {debugCards.slice(0, 2).map(card => {\n        const {\n          artist,\n          attack,\n          cardClass,\n          collectible,\n          cost,\n          elite,\n          entourage,\n          flavor,\n          health,\n          hideStats,\n          howToEarn,\n          howToEarnGolden,\n          id,\n          images,\n          mechanics,\n          name,\n          playRequirements,\n          race,\n          rarity,\n          set,\n          sounds,\n          spellDamage,\n          targetingArrowText,\n          text,\n          type\n        } = card;\n\n        return (\n          <CanTargetTest key={id}>\n            <Minion\n              artist={artist}\n              attack={attack}\n              cardClass={cardClass}\n              collectible={collectible}\n              cost={cost}\n              elite={elite}\n              entourage={entourage}\n              flavor={flavor}\n              health={health}\n              hideStats={hideStats}\n              howToEarn={howToEarn}\n              howToEarnGolden={howToEarnGolden}\n              id={id}\n              images={images}\n              mechanics={mechanics}\n              name={name}\n              playRequirements={playRequirements}\n              race={race}\n              rarity={rarity}\n              set={set}\n              sounds={sounds}\n              spellDamage={spellDamage}\n              targetingArrowText={targetingArrowText}\n              text={text}\n              type={type}\n            />\n          </CanTargetTest>\n        );\n      })}\n    </Component>\n  ) : null;\n};\n\nconst Component = styled.div`\n  align-items: center;\n  background: #333;\n  box-shadow: inset 0 0 10px transparent;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row nowrap;\n  height: ${p => (p.boardHeight ? `calc(${p.boardHeight}px / 2)` : `0px`)};\n  justify-content: center;\n  margin: auto auto 0;\n  overflow: hidden;\n  width: ${p => (p.boardWidth ? `${p.boardWidth}px` : `0px`)};\n\n  & > div + div {\n    margin-left: 20px;\n  }\n`;\n\nTheirBoard.propTypes = {\n  children: PropTypes.node\n};\n\nexport default TheirBoard;\n"]},"metadata":{},"sourceType":"module"}