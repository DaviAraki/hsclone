{"ast":null,"code":"var _jsxFileName = \"/Users/william.pansky/www/hsclone/src/features/layout/TheirBoard.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import { useDrop } from 'react-dnd';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'; // import Minion from 'components/Minion/Minion.component';\n// import debugCards from 'debugData/debugCards.json';\n\nimport useDimensions from 'react-use-dimensions'; // import {\n//   targetHovered,\n//   resetHoveredTarget\n// } from 'features/targeting/targeting.slice';\n\nconst CanTargetTest = ({\n  children\n}) => {\n  const dispatch = useDispatch();\n  const {\n    enabled\n  } = useSelector(s => s.targeting);\n  const [cardRef, redRefProps] = useDimensions({\n    liveMeasure: true\n  });\n  const handleMouseEnter = React.useCallback(redRefProps => {\n    return dispatch(targetHovered(redRefProps));\n  }, [dispatch]);\n  const handleMouseLeave = React.useCallback(() => {\n    return dispatch(resetHoveredTarget());\n  }, [dispatch]);\n  return enabled ? __jsx(\"div\", {\n    ref: cardRef,\n    className: \"mechanics--can_target\",\n    onMouseEnter: () => handleMouseEnter(redRefProps),\n    onMouseLeave: () => handleMouseLeave(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, children) : __jsx(\"div\", {\n    ref: cardRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, children);\n};\n\nconst TheirBoard = ({\n  children\n}) => {\n  const {\n    boardHeight,\n    boardWidth\n  } = useSelector(s => s.layout);\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop({\n    accept: 'SPELL',\n    drop: () => ({\n      name: 'TheirBoard'\n    }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  return boardHeight && boardWidth ? __jsx(Component, {\n    boardHeight: boardHeight,\n    boardWidth: boardWidth,\n    \"data-file\": \"TheirBoard\",\n    ref: drop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, children) : null;\n};\n\nconst Component = styled.div`\n  align-items: center;\n  background: #333;\n  box-shadow: inset 0 0 10px transparent;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row nowrap;\n  height: ${p => p.boardHeight ? `calc(${p.boardHeight}px / 2)` : `0px`};\n  justify-content: center;\n  margin: auto auto 0;\n  overflow: hidden;\n  width: ${p => p.boardWidth ? `${p.boardWidth}px` : `0px`};\n\n  & > div + div {\n    margin-left: 20px;\n  }\n`;\nTheirBoard.propTypes = {\n  children: PropTypes.node\n};\nexport default TheirBoard;","map":{"version":3,"sources":["/Users/william.pansky/www/hsclone/src/features/layout/TheirBoard.jsx"],"names":["React","useSelector","useDispatch","PropTypes","styled","useDimensions","CanTargetTest","children","dispatch","enabled","s","targeting","cardRef","redRefProps","liveMeasure","handleMouseEnter","useCallback","targetHovered","handleMouseLeave","resetHoveredTarget","TheirBoard","boardHeight","boardWidth","layout","canDrop","isOver","drop","useDrop","accept","name","collect","monitor","Component","div","p","propTypes","node"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { useDrop } from 'react-dnd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n// import Minion from 'components/Minion/Minion.component';\n// import debugCards from 'debugData/debugCards.json';\nimport useDimensions from 'react-use-dimensions';\n// import {\n//   targetHovered,\n//   resetHoveredTarget\n// } from 'features/targeting/targeting.slice';\n\nconst CanTargetTest = ({ children }) => {\n  const dispatch = useDispatch();\n  const { enabled } = useSelector(s => s.targeting);\n  const [cardRef, redRefProps] = useDimensions({\n    liveMeasure: true\n  });\n\n  const handleMouseEnter = React.useCallback(\n    redRefProps => {\n      return dispatch(targetHovered(redRefProps));\n    },\n    [dispatch]\n  );\n\n  const handleMouseLeave = React.useCallback(() => {\n    return dispatch(resetHoveredTarget());\n  }, [dispatch]);\n\n  return enabled ? (\n    <div\n      ref={cardRef}\n      className=\"mechanics--can_target\"\n      onMouseEnter={() => handleMouseEnter(redRefProps)}\n      onMouseLeave={() => handleMouseLeave()}\n    >\n      {children}\n    </div>\n  ) : (\n    <div ref={cardRef}>{children}</div>\n  );\n};\n\nconst TheirBoard = ({ children }) => {\n  const { boardHeight, boardWidth } = useSelector(s => s.layout);\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: 'SPELL',\n    drop: () => ({ name: 'TheirBoard' }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n\n  return boardHeight && boardWidth ? (\n    <Component\n      boardHeight={boardHeight}\n      boardWidth={boardWidth}\n      data-file=\"TheirBoard\"\n      ref={drop}\n    >\n      {children}\n    </Component>\n  ) : null;\n};\n\nconst Component = styled.div`\n  align-items: center;\n  background: #333;\n  box-shadow: inset 0 0 10px transparent;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row nowrap;\n  height: ${p => (p.boardHeight ? `calc(${p.boardHeight}px / 2)` : `0px`)};\n  justify-content: center;\n  margin: auto auto 0;\n  overflow: hidden;\n  width: ${p => (p.boardWidth ? `${p.boardWidth}px` : `0px`)};\n\n  & > div + div {\n    margin-left: 20px;\n  }\n`;\n\nTheirBoard.propTypes = {\n  children: PropTypes.node\n};\n\nexport default TheirBoard;\n"]},"metadata":{},"sourceType":"module"}