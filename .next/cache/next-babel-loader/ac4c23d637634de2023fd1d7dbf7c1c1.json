{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { loadingStart, loadingFailed } from 'utils/redux.loading';\nimport debugYourBoard from 'debugData/debugYourBoard.json';\n\nconst getInitialState = key => {\n  switch (key) {\n    case 'debug':\n      return debugYourBoard;\n\n    default:\n      return [];\n  }\n};\n\nconst yourBoard = createSlice({\n  name: 'yourBoard',\n  initialState: getInitialState(),\n  reducers: {\n    initYourBoardFailure: loadingFailed,\n    initYourBoardStart: loadingStart,\n    initYourBoardSuccess: state => {\n      state.isLoading = false;\n    },\n\n    addCardToYourBoard(state, {\n      payload\n    }) {\n      const {\n        item,\n        i\n      } = payload;\n      const newBoard = [...state.slice(0, i + 1), item, ...state.slice(i + 1)];\n      return newBoard;\n    }\n\n  }\n});\nconst {\n  actions,\n  reducer\n} = yourBoard;\nexport const {\n  initYourBoardFailure,\n  initYourBoardStart,\n  initYourBoardSuccess,\n  addCardToYourBoard\n} = actions; // const fetchMapDroneImagesFromNeighborhoods = data => {\n//   return data;\n// }\n// export const initLayout = () => async dispatch => {\n//   try {\n//     dispatch(initLayoutStart());\n//     const footerHeight = await getFooterHeight();\n//     dispatch(initLayoutSuccess(footerHeight));\n//   } catch (err) {\n//     dispatch(initLayoutFailure(err));\n//     // recursive failure init\n//     setTimeout(() => {\n//       dispatch(initLayout());\n//     }, 2000);\n//   }\n// };\n\nexport default reducer;","map":{"version":3,"sources":["/Users/william.pansky/www/hsclone/src/features/yourBoard/yourBoard.slice.js"],"names":["createSlice","loadingStart","loadingFailed","debugYourBoard","getInitialState","key","yourBoard","name","initialState","reducers","initYourBoardFailure","initYourBoardStart","initYourBoardSuccess","state","isLoading","addCardToYourBoard","payload","item","i","newBoard","slice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,qBAA5C;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,MAAMC,eAAe,GAAGC,GAAG,IAAI;AAC7B,UAAQA,GAAR;AACE,SAAK,OAAL;AACE,aAAOF,cAAP;;AAEF;AACE,aAAO,EAAP;AALJ;AAOD,CARD;;AAUA,MAAMG,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,WADsB;AAE5BC,EAAAA,YAAY,EAAEJ,eAAe,EAFD;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,oBAAoB,EAAER,aADd;AAERS,IAAAA,kBAAkB,EAAEV,YAFZ;AAGRW,IAAAA,oBAAoB,EAAEC,KAAK,IAAI;AAC7BA,MAAAA,KAAK,CAACC,SAAN,GAAkB,KAAlB;AACD,KALO;;AAMRC,IAAAA,kBAAkB,CAACF,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,EAAqB;AACrC,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAcF,OAApB;AACA,YAAMG,QAAQ,GAAG,CAAC,GAAGN,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeF,CAAC,GAAG,CAAnB,CAAJ,EAA2BD,IAA3B,EAAiC,GAAGJ,KAAK,CAACO,KAAN,CAAYF,CAAC,GAAG,CAAhB,CAApC,CAAjB;AACA,aAAOC,QAAP;AACD;;AAVO;AAHkB,CAAD,CAA7B;AAiBA,MAAM;AAAEE,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBhB,SAA7B;AAEA,OAAO,MAAM;AACXI,EAAAA,oBADW;AAEXC,EAAAA,kBAFW;AAGXC,EAAAA,oBAHW;AAIXG,EAAAA;AAJW,IAKTM,OALG,C,CAOP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { loadingStart, loadingFailed } from 'utils/redux.loading';\nimport debugYourBoard from 'debugData/debugYourBoard.json';\n\nconst getInitialState = key => {\n  switch (key) {\n    case 'debug':\n      return debugYourBoard;\n\n    default:\n      return [];\n  }\n};\n\nconst yourBoard = createSlice({\n  name: 'yourBoard',\n  initialState: getInitialState(),\n  reducers: {\n    initYourBoardFailure: loadingFailed,\n    initYourBoardStart: loadingStart,\n    initYourBoardSuccess: state => {\n      state.isLoading = false;\n    },\n    addCardToYourBoard(state, { payload }) {\n      const { item, i } = payload;\n      const newBoard = [...state.slice(0, i + 1), item, ...state.slice(i + 1)];\n      return newBoard;\n    }\n  }\n});\n\nconst { actions, reducer } = yourBoard;\n\nexport const {\n  initYourBoardFailure,\n  initYourBoardStart,\n  initYourBoardSuccess,\n  addCardToYourBoard\n} = actions;\n\n// const fetchMapDroneImagesFromNeighborhoods = data => {\n//   return data;\n// }\n\n// export const initLayout = () => async dispatch => {\n//   try {\n//     dispatch(initLayoutStart());\n//     const footerHeight = await getFooterHeight();\n//     dispatch(initLayoutSuccess(footerHeight));\n//   } catch (err) {\n//     dispatch(initLayoutFailure(err));\n\n//     // recursive failure init\n//     setTimeout(() => {\n//       dispatch(initLayout());\n//     }, 2000);\n//   }\n// };\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}