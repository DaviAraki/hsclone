{"ast":null,"code":"var _jsxFileName = \"/Users/william.pansky/www/hsclone/src/features/layout/WindowSizer.jsx\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from 'react';\nimport { setBoardHeight, setBoardWidth } from 'features/layout/layout.slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport exists from 'utils/element.exists';\nimport PropTypes from 'prop-types';\nimport WindowSizeListener from 'react-window-size-listener';\n\nvar WindowSizer = function WindowSizer(_ref) {\n  var children = _ref.children;\n  var _window = window,\n      innerHeight = _window.innerHeight;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (s) {\n    return s.layout;\n  }),\n      debugBarHeight = _useSelector.debugBarHeight,\n      footerHeight = _useSelector.footerHeight,\n      headerHeight = _useSelector.headerHeight;\n  /**\n   * Dispatches `setBoardHeight()` with one of two arguments:\n   *  1. Returns `height - (debugBarHeight + footerHeight + headerHeight)`\n   *  2. Returns `height`\n   *\n   * @param {Number} height window.innerHeight\n   * @requires React.useCallback()\n   * @requires redux>dispatch()\n   * @requires redux>layout>debugBarHeight\n   * @requires redux>layout>footerHeight\n   * @requires redux>layout>headerHeight\n   * @requires redux>stage>setBoardHeight()\n   * @requires utils>exists()\n   */\n\n\n  var handleAppHeight = useCallback(function (height) {\n    if (exists(debugBarHeight) && exists(footerHeight) && exists(headerHeight)) {\n      /* 1 */\n      var uiCombinedHeight = debugBarHeight + footerHeight + headerHeight;\n      var newAppHeight = height - uiCombinedHeight;\n      return dispatch(setBoardHeight(newAppHeight));\n    } else {\n      /* 2 */\n      return dispatch(setBoardHeight(height));\n    }\n  }, [dispatch, debugBarHeight, footerHeight, headerHeight]);\n  useEffect(function () {\n    handleAppHeight(innerHeight);\n  }, [handleAppHeight, innerHeight]);\n  return __jsx(WindowSizeListener, {\n    onResize: function onResize(windowSize) {\n      var windowWidth = windowSize.windowWidth,\n          windowHeight = windowSize.windowHeight;\n      dispatch(setBoardWidth(windowWidth));\n      handleAppHeight(windowHeight);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, children);\n};\n\nWindowSizer.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default WindowSizer;","map":{"version":3,"sources":["/Users/william.pansky/www/hsclone/src/features/layout/WindowSizer.jsx"],"names":["React","useCallback","useEffect","setBoardHeight","setBoardWidth","useDispatch","useSelector","exists","PropTypes","WindowSizeListener","WindowSizer","children","window","innerHeight","dispatch","s","layout","debugBarHeight","footerHeight","headerHeight","handleAppHeight","height","uiCombinedHeight","newAppHeight","windowSize","windowWidth","windowHeight","propTypes","node","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,8BAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAAA,gBACdC,MADc;AAAA,MAC9BC,WAD8B,WAC9BA,WAD8B;AAEpC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAFoC,qBAGmBC,WAAW,CAChE,UAAAS,CAAC;AAAA,WAAIA,CAAC,CAACC,MAAN;AAAA,GAD+D,CAH9B;AAAA,MAG5BC,cAH4B,gBAG5BA,cAH4B;AAAA,MAGZC,YAHY,gBAGZA,YAHY;AAAA,MAGEC,YAHF,gBAGEA,YAHF;AAOpC;;;;;;;;;;;;;;;;AAcA,MAAMC,eAAe,GAAGnB,WAAW,CACjC,UAAAoB,MAAM,EAAI;AACR,QACEd,MAAM,CAACU,cAAD,CAAN,IACAV,MAAM,CAACW,YAAD,CADN,IAEAX,MAAM,CAACY,YAAD,CAHR,EAIE;AACA;AACA,UAAMG,gBAAgB,GAAGL,cAAc,GAAGC,YAAjB,GAAgCC,YAAzD;AACA,UAAMI,YAAY,GAAGF,MAAM,GAAGC,gBAA9B;AACA,aAAOR,QAAQ,CAACX,cAAc,CAACoB,YAAD,CAAf,CAAf;AACD,KATD,MASO;AACL;AACA,aAAOT,QAAQ,CAACX,cAAc,CAACkB,MAAD,CAAf,CAAf;AACD;AACF,GAfgC,EAgBjC,CAACP,QAAD,EAAWG,cAAX,EAA2BC,YAA3B,EAAyCC,YAAzC,CAhBiC,CAAnC;AAmBAjB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,eAAe,CAACP,WAAD,CAAf;AACD,GAFQ,EAEN,CAACO,eAAD,EAAkBP,WAAlB,CAFM,CAAT;AAIA,SACE,MAAC,kBAAD;AACE,IAAA,QAAQ,EAAE,kBAAAW,UAAU,EAAI;AAAA,UACdC,WADc,GACgBD,UADhB,CACdC,WADc;AAAA,UACDC,YADC,GACgBF,UADhB,CACDE,YADC;AAEtBZ,MAAAA,QAAQ,CAACV,aAAa,CAACqB,WAAD,CAAd,CAAR;AACAL,MAAAA,eAAe,CAACM,YAAD,CAAf;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGf,QAPH,CADF;AAWD,CAvDD;;AAyDAD,WAAW,CAACiB,SAAZ,GAAwB;AACtBhB,EAAAA,QAAQ,EAAEH,SAAS,CAACoB,IAAV,CAAeC;AADH,CAAxB;AAIA,eAAenB,WAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { setBoardHeight, setBoardWidth } from 'features/layout/layout.slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport exists from 'utils/element.exists';\nimport PropTypes from 'prop-types';\nimport WindowSizeListener from 'react-window-size-listener';\n\nconst WindowSizer = ({ children }) => {\n  let { innerHeight } = window;\n  const dispatch = useDispatch();\n  const { debugBarHeight, footerHeight, headerHeight } = useSelector(\n    s => s.layout\n  );\n\n  /**\n   * Dispatches `setBoardHeight()` with one of two arguments:\n   *  1. Returns `height - (debugBarHeight + footerHeight + headerHeight)`\n   *  2. Returns `height`\n   *\n   * @param {Number} height window.innerHeight\n   * @requires React.useCallback()\n   * @requires redux>dispatch()\n   * @requires redux>layout>debugBarHeight\n   * @requires redux>layout>footerHeight\n   * @requires redux>layout>headerHeight\n   * @requires redux>stage>setBoardHeight()\n   * @requires utils>exists()\n   */\n  const handleAppHeight = useCallback(\n    height => {\n      if (\n        exists(debugBarHeight) &&\n        exists(footerHeight) &&\n        exists(headerHeight)\n      ) {\n        /* 1 */\n        const uiCombinedHeight = debugBarHeight + footerHeight + headerHeight;\n        const newAppHeight = height - uiCombinedHeight;\n        return dispatch(setBoardHeight(newAppHeight));\n      } else {\n        /* 2 */\n        return dispatch(setBoardHeight(height));\n      }\n    },\n    [dispatch, debugBarHeight, footerHeight, headerHeight]\n  );\n\n  useEffect(() => {\n    handleAppHeight(innerHeight);\n  }, [handleAppHeight, innerHeight]);\n\n  return (\n    <WindowSizeListener\n      onResize={windowSize => {\n        const { windowWidth, windowHeight } = windowSize;\n        dispatch(setBoardWidth(windowWidth));\n        handleAppHeight(windowHeight);\n      }}\n    >\n      {children}\n    </WindowSizeListener>\n  );\n};\n\nWindowSizer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default WindowSizer;\n"]},"metadata":{},"sourceType":"module"}