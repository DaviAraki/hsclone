{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/william.pansky/www/hsclone/src/features/yourHand/YourHand.jsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-flow: row nowrap;\\n  align-items: center;\\n  justify-content: center;\\n\\n  & > div {\\n    position: relative;\\n    top: -20px;\\n  }\\n\\n  & > div + div {\\n    margin-left: calc(calc(var(--card-height) / 1.4) / -3.5);\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components'; // import Card from 'components/Card/Card.component';\n// import CardDragLayer from 'systems/CardDragLayer';\n\nvar YourHand = function YourHand() {\n  // const yourCards = useSelector(s => s.yourHand);\n  // const { length } = yourCards;\n  var yourCards = [];\n  return __jsx(Component, {\n    \"data-layout\": \"YourHand\",\n    \"data-length\": length,\n    numberOfCardsInHand: length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, yourCards.map(function (card, index) {\n    var artist = card.artist,\n        attack = card.attack,\n        cardClass = card.cardClass,\n        collectible = card.collectible,\n        cost = card.cost,\n        elite = card.elite,\n        entourage = card.entourage,\n        flavor = card.flavor,\n        health = card.health,\n        hideStats = card.hideStats,\n        howToEarn = card.howToEarn,\n        howToEarnGolden = card.howToEarnGolden,\n        id = card.id,\n        images = card.images,\n        mechanics = card.mechanics,\n        name = card.name,\n        playRequirements = card.playRequirements,\n        race = card.race,\n        rarity = card.rarity,\n        set = card.set,\n        sounds = card.sounds,\n        spellDamage = card.spellDamage,\n        targetingArrowText = card.targetingArrowText,\n        text = card.text,\n        type = card.type;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) // <CardDragLayer\n    //   key={index}\n    //   index={index}\n    //   artist={artist}\n    //   attack={attack}\n    //   cardClass={cardClass}\n    //   collectible={collectible}\n    //   cost={cost}\n    //   elite={elite}\n    //   entourage={entourage}\n    //   flavor={flavor}\n    //   health={health}\n    //   hideStats={hideStats}\n    //   howToEarn={howToEarn}\n    //   howToEarnGolden={howToEarnGolden}\n    //   id={id}\n    //   images={images}\n    //   mechanics={mechanics}\n    //   name={name}\n    //   playRequirements={playRequirements}\n    //   race={race}\n    //   rarity={rarity}\n    //   set={set}\n    //   sounds={sounds}\n    //   spellDamage={spellDamage}\n    //   targetingArrowText={targetingArrowText}\n    //   text={text}\n    //   type={type}\n    // >\n    //   <Card\n    //     artist={artist}\n    //     attack={attack}\n    //     cardClass={cardClass}\n    //     collectible={collectible}\n    //     cost={cost}\n    //     elite={elite}\n    //     entourage={entourage}\n    //     flavor={flavor}\n    //     health={health}\n    //     hideStats={hideStats}\n    //     howToEarn={howToEarn}\n    //     howToEarnGolden={howToEarnGolden}\n    //     id={id}\n    //     images={images}\n    //     mechanics={mechanics}\n    //     name={name}\n    //     playRequirements={playRequirements}\n    //     race={race}\n    //     rarity={rarity}\n    //     set={set}\n    //     sounds={sounds}\n    //     spellDamage={spellDamage}\n    //     targetingArrowText={targetingArrowText}\n    //     text={text}\n    //     type={type}\n    //   />\n    // </CardDragLayer>\n    ;\n  }));\n};\n\nvar Component = styled.div(_templateObject());\nexport default YourHand;","map":{"version":3,"sources":["/Users/william.pansky/www/hsclone/src/features/yourHand/YourHand.jsx"],"names":["React","useSelector","styled","YourHand","yourCards","length","map","card","index","artist","attack","cardClass","collectible","cost","elite","entourage","flavor","health","hideStats","howToEarn","howToEarnGolden","id","images","mechanics","name","playRequirements","race","rarity","set","sounds","spellDamage","targetingArrowText","text","type","Component","div"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n// import Card from 'components/Card/Card.component';\n// import CardDragLayer from 'systems/CardDragLayer';\n\nconst YourHand = () => {\n  // const yourCards = useSelector(s => s.yourHand);\n  // const { length } = yourCards;\n  const yourCards = [];\n\n  return (\n    <Component\n      data-layout=\"YourHand\"\n      data-length={length}\n      numberOfCardsInHand={length}\n    >\n      {yourCards.map((card, index) => {\n        const {\n          artist,\n          attack,\n          cardClass,\n          collectible,\n          cost,\n          elite,\n          entourage,\n          flavor,\n          health,\n          hideStats,\n          howToEarn,\n          howToEarnGolden,\n          id,\n          images,\n          mechanics,\n          name,\n          playRequirements,\n          race,\n          rarity,\n          set,\n          sounds,\n          spellDamage,\n          targetingArrowText,\n          text,\n          type\n        } = card;\n\n        return (\n          <div></div>\n          // <CardDragLayer\n          //   key={index}\n          //   index={index}\n          //   artist={artist}\n          //   attack={attack}\n          //   cardClass={cardClass}\n          //   collectible={collectible}\n          //   cost={cost}\n          //   elite={elite}\n          //   entourage={entourage}\n          //   flavor={flavor}\n          //   health={health}\n          //   hideStats={hideStats}\n          //   howToEarn={howToEarn}\n          //   howToEarnGolden={howToEarnGolden}\n          //   id={id}\n          //   images={images}\n          //   mechanics={mechanics}\n          //   name={name}\n          //   playRequirements={playRequirements}\n          //   race={race}\n          //   rarity={rarity}\n          //   set={set}\n          //   sounds={sounds}\n          //   spellDamage={spellDamage}\n          //   targetingArrowText={targetingArrowText}\n          //   text={text}\n          //   type={type}\n          // >\n          //   <Card\n          //     artist={artist}\n          //     attack={attack}\n          //     cardClass={cardClass}\n          //     collectible={collectible}\n          //     cost={cost}\n          //     elite={elite}\n          //     entourage={entourage}\n          //     flavor={flavor}\n          //     health={health}\n          //     hideStats={hideStats}\n          //     howToEarn={howToEarn}\n          //     howToEarnGolden={howToEarnGolden}\n          //     id={id}\n          //     images={images}\n          //     mechanics={mechanics}\n          //     name={name}\n          //     playRequirements={playRequirements}\n          //     race={race}\n          //     rarity={rarity}\n          //     set={set}\n          //     sounds={sounds}\n          //     spellDamage={spellDamage}\n          //     targetingArrowText={targetingArrowText}\n          //     text={text}\n          //     type={type}\n          //   />\n          // </CardDragLayer>\n        );\n      })}\n    </Component>\n  );\n};\n\nconst Component = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: center;\n\n  & > div {\n    position: relative;\n    top: -20px;\n  }\n\n  & > div + div {\n    margin-left: calc(calc(var(--card-height) / 1.4) / -3.5);\n  }\n`;\n\nexport default YourHand;\n"]},"metadata":{},"sourceType":"module"}