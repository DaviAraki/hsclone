{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { add, subtract } from 'mathjs'; // import exists from 'utils/element.exists';\n\nlet initialState = 0;\nconst goldSlice = createSlice({\n  name: 'gold',\n  initialState,\n  reducers: {\n    setGoldValue(state, {\n      payload\n    }) {\n      return Number(payload);\n    },\n\n    incrementGoldValue(state) {\n      return state + 1;\n    },\n\n    tickGoldValue(state) {\n      setInterval(function () {\n        incrementGoldValue();\n      }, 200);\n    } // addToPrice(state, { payload }) {\n    //   if (!exists(payload)) payload = 0;\n    //   const val = add(Number(state), Number(payload));\n    //   return val;\n    // },\n    // subtractFromPrice(state, { payload }) {\n    //   if (!exists(payload)) payload = 0;\n    //   const val = subtract(Number(state), Number(payload));\n    //   return val;\n    // }\n\n\n  }\n});\nconst {\n  actions,\n  reducer\n} = goldSlice;\nexport const {\n  setGoldValue,\n  incrementGoldValue,\n  tickGoldValue\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/Users/william.pansky/www/hsclone/src/features/gold/gold.slice.js"],"names":["createSlice","add","subtract","initialState","goldSlice","name","reducers","setGoldValue","state","payload","Number","incrementGoldValue","tickGoldValue","setInterval","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,QAA9B,C,CACA;;AAEA,IAAIC,YAAY,GAAG,CAAnB;AAEA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,MADsB;AAE5BF,EAAAA,YAF4B;AAG5BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAqB;AAC/B,aAAOC,MAAM,CAACD,OAAD,CAAb;AACD,KAHO;;AAKRE,IAAAA,kBAAkB,CAACH,KAAD,EAAQ;AACxB,aAAOA,KAAK,GAAG,CAAf;AACD,KAPO;;AASRI,IAAAA,aAAa,CAACJ,KAAD,EAAQ;AACnBK,MAAAA,WAAW,CAAC,YAAW;AACrBF,QAAAA,kBAAkB;AACnB,OAFU,EAER,GAFQ,CAAX;AAGD,KAbO,CAeR;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAzBQ;AAHkB,CAAD,CAA7B;AAgCA,MAAM;AAAEG,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBX,SAA7B;AACA,OAAO,MAAM;AAAEG,EAAAA,YAAF;AAAgBI,EAAAA,kBAAhB;AAAoCC,EAAAA;AAApC,IAAsDE,OAA5D;AACP,eAAeC,OAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { add, subtract } from 'mathjs';\n// import exists from 'utils/element.exists';\n\nlet initialState = 0;\n\nconst goldSlice = createSlice({\n  name: 'gold',\n  initialState,\n  reducers: {\n    setGoldValue(state, { payload }) {\n      return Number(payload);\n    },\n\n    incrementGoldValue(state) {\n      return state + 1;\n    },\n\n    tickGoldValue(state) {\n      setInterval(function() {\n        incrementGoldValue();\n      }, 200);\n    }\n\n    // addToPrice(state, { payload }) {\n    //   if (!exists(payload)) payload = 0;\n    //   const val = add(Number(state), Number(payload));\n    //   return val;\n    // },\n\n    // subtractFromPrice(state, { payload }) {\n    //   if (!exists(payload)) payload = 0;\n    //   const val = subtract(Number(state), Number(payload));\n    //   return val;\n    // }\n  }\n});\n\nconst { actions, reducer } = goldSlice;\nexport const { setGoldValue, incrementGoldValue, tickGoldValue } = actions;\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}