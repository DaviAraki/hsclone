{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/william.pansky/www/hsclone/src/features/layout/TheirBoard.jsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  align-items: center;\\n  background: #333;\\n  box-shadow: inset 0 0 10px transparent;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-flow: row nowrap;\\n  height: \", \";\\n  justify-content: center;\\n  margin: auto auto 0;\\n  overflow: hidden;\\n  width: \", \";\\n\\n  & > div + div {\\n    margin-left: 20px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react'; // import { useDrop } from 'react-dnd';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'; // import Minion from 'components/Minion/Minion.component';\n// import debugCards from 'debugData/debugCards.json';\n\nimport useDimensions from 'react-use-dimensions'; // import {\n//   targetHovered,\n//   resetHoveredTarget\n// } from 'features/targeting/targeting.slice';\n\nvar CanTargetTest = function CanTargetTest(_ref) {\n  var children = _ref.children;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (s) {\n    return s.targeting;\n  }),\n      enabled = _useSelector.enabled;\n\n  var _useDimensions = useDimensions({\n    liveMeasure: true\n  }),\n      _useDimensions2 = _slicedToArray(_useDimensions, 2),\n      cardRef = _useDimensions2[0],\n      redRefProps = _useDimensions2[1];\n\n  var handleMouseEnter = React.useCallback(function (redRefProps) {\n    return dispatch(targetHovered(redRefProps));\n  }, [dispatch]);\n  var handleMouseLeave = React.useCallback(function () {\n    return dispatch(resetHoveredTarget());\n  }, [dispatch]);\n  return enabled ? __jsx(\"div\", {\n    ref: cardRef,\n    className: \"mechanics--can_target\",\n    onMouseEnter: function onMouseEnter() {\n      return handleMouseEnter(redRefProps);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return handleMouseLeave();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, children) : __jsx(\"div\", {\n    ref: cardRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, children);\n};\n\nvar TheirBoard = function TheirBoard(_ref2) {\n  var children = _ref2.children;\n\n  var _useSelector2 = useSelector(function (s) {\n    return s.layout;\n  }),\n      boardHeight = _useSelector2.boardHeight,\n      boardWidth = _useSelector2.boardWidth;\n\n  var _useDrop = useDrop({\n    accept: 'SPELL',\n    drop: function drop() {\n      return {\n        name: 'TheirBoard'\n      };\n    },\n    collect: function collect(monitor) {\n      return {\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop()\n      };\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      canDrop = _useDrop2$.canDrop,\n      isOver = _useDrop2$.isOver,\n      drop = _useDrop2[1];\n\n  return boardHeight && boardWidth ? __jsx(Component, {\n    boardHeight: boardHeight,\n    boardWidth: boardWidth,\n    \"data-file\": \"TheirBoard\",\n    ref: drop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, children) : null;\n};\n\nvar Component = styled.div(_templateObject(), function (p) {\n  return p.boardHeight ? \"calc(\".concat(p.boardHeight, \"px / 2)\") : \"0px\";\n}, function (p) {\n  return p.boardWidth ? \"\".concat(p.boardWidth, \"px\") : \"0px\";\n});\nTheirBoard.propTypes = {\n  children: PropTypes.node\n};\nexport default TheirBoard;","map":{"version":3,"sources":["/Users/william.pansky/www/hsclone/src/features/layout/TheirBoard.jsx"],"names":["React","useSelector","useDispatch","PropTypes","styled","useDimensions","CanTargetTest","children","dispatch","s","targeting","enabled","liveMeasure","cardRef","redRefProps","handleMouseEnter","useCallback","targetHovered","handleMouseLeave","resetHoveredTarget","TheirBoard","layout","boardHeight","boardWidth","useDrop","accept","drop","name","collect","monitor","isOver","canDrop","Component","div","p","propTypes","node"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { useDrop } from 'react-dnd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n// import Minion from 'components/Minion/Minion.component';\n// import debugCards from 'debugData/debugCards.json';\nimport useDimensions from 'react-use-dimensions';\n// import {\n//   targetHovered,\n//   resetHoveredTarget\n// } from 'features/targeting/targeting.slice';\n\nconst CanTargetTest = ({ children }) => {\n  const dispatch = useDispatch();\n  const { enabled } = useSelector(s => s.targeting);\n  const [cardRef, redRefProps] = useDimensions({\n    liveMeasure: true\n  });\n\n  const handleMouseEnter = React.useCallback(\n    redRefProps => {\n      return dispatch(targetHovered(redRefProps));\n    },\n    [dispatch]\n  );\n\n  const handleMouseLeave = React.useCallback(() => {\n    return dispatch(resetHoveredTarget());\n  }, [dispatch]);\n\n  return enabled ? (\n    <div\n      ref={cardRef}\n      className=\"mechanics--can_target\"\n      onMouseEnter={() => handleMouseEnter(redRefProps)}\n      onMouseLeave={() => handleMouseLeave()}\n    >\n      {children}\n    </div>\n  ) : (\n    <div ref={cardRef}>{children}</div>\n  );\n};\n\nconst TheirBoard = ({ children }) => {\n  const { boardHeight, boardWidth } = useSelector(s => s.layout);\n\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: 'SPELL',\n    drop: () => ({ name: 'TheirBoard' }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n\n  return boardHeight && boardWidth ? (\n    <Component\n      boardHeight={boardHeight}\n      boardWidth={boardWidth}\n      data-file=\"TheirBoard\"\n      ref={drop}\n    >\n      {children}\n    </Component>\n  ) : null;\n};\n\nconst Component = styled.div`\n  align-items: center;\n  background: #333;\n  box-shadow: inset 0 0 10px transparent;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row nowrap;\n  height: ${p => (p.boardHeight ? `calc(${p.boardHeight}px / 2)` : `0px`)};\n  justify-content: center;\n  margin: auto auto 0;\n  overflow: hidden;\n  width: ${p => (p.boardWidth ? `${p.boardWidth}px` : `0px`)};\n\n  & > div + div {\n    margin-left: 20px;\n  }\n`;\n\nTheirBoard.propTypes = {\n  children: PropTypes.node\n};\n\nexport default TheirBoard;\n"]},"metadata":{},"sourceType":"module"}